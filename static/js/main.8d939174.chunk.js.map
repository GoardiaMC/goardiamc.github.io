{"version":3,"sources":["components/create-sheet.js","App.js","serviceWorker.js","index.js"],"names":["getDMY","date","isEmpty","getDate","getMonth","getFullYear","obj","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","deleteRow","display","padding","height","width","header","tableRow","error","color","paper","marginTop","spacing","form","submit","margin","SignIn","classes","useState","companyName","setCompanyName","companyTaxNumber","setCompanyTaxNumber","employeeName","setEmployeeName","emplyeeDepartment","setEmplyeeDepartment","employeePosition","setEmplyeePosition","employeeTaxNumber","setEmployeeTaxNumber","startDate","setStartDate","endDate","setEndDate","setDate","description","setDescription","price","setPrice","multiplier","setMultiplier","category","setCategory","tableRows","setTableRows","setErrors","priceRegex","commitError","err","errs","setState","validateFields","test","Object","keys","length","generateExcelFile","url","xhr","XMLHttpRequest","open","responseType","onload","e","this","status","type","getResponseHeader","blob","Blob","response","reader","FileReader","onloadend","event","arrayBuffer","result","Excel","xlsx","load","then","workbook","worksheet","getWorksheet","extraRows","spliceRows","Array","getRow","getCell","value","eachCell","includeEmpty","cell","colNumber","forEach","_","index","style","categoryMap","Hotel","Transporte","Combustível","Alimentação","Telefone","Entretenimento","Diversos","lineIndex","row","Date","parseFloat","formula","writeBuffer","data","saveAs","catch","console","readAsArrayBuffer","send","load_binary_resource","Container","component","maxWidth","Typography","variant","Grid","container","item","xs","sm","TextField","fullWidth","label","onChange","target","utils","DateFnsUtils","disableToolbar","format","className","mask","InputLabel","fontSize","Select","MenuItem","Button","onClick","preventDefault","log","disabled","defaultValue","map","key","uuid","rowIndex","filter","App","path","exact","CreateSheet","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d939174.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport { uuid } from \"uuidv4\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport * as Excel from \"exceljs/dist/exceljs.min.js\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\n\r\nconst getDMY = date =>\r\n  isEmpty(date)\r\n    ? \"\"\r\n    : `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n\r\nconst isEmpty = obj => !obj || obj === \"\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  deleteRow: {\r\n    \"min-width\": 0,\r\n    display: \"block\",\r\n    \"margin-left\": \"auto\",\r\n    \"margin-right\": \"auto\",\r\n    padding: \"10px 0 0 0\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(193, 0, 0, 0.6)\"\r\n  },\r\n  header: {\r\n    backgroundColor: \"rgba(48, 45, 194, 0.83)\"\r\n  },\r\n  tableRow: {\r\n    backgroundColor: \"rgba(86, 74, 144, 0.44)\"\r\n  },\r\n  error: {\r\n    color: \"rgba(193, 0, 0, 0.6)\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8)\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  const [companyName, setCompanyName] = useState(\"EXTIA Portugal Lda\");\r\n  const [companyTaxNumber, setCompanyTaxNumber] = useState(\"515533335\");\r\n  const [employeeName, setEmployeeName] = useState(\"\");\r\n  const [emplyeeDepartment, setEmplyeeDepartment] = useState(\"\");\r\n  const [employeePosition, setEmplyeePosition] = useState(\"\");\r\n  const [employeeTaxNumber, setEmployeeTaxNumber] = useState(\"\");\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  const [date, setDate] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"0.00\");\r\n  const [multiplier, setMultiplier] = useState(1);\r\n  const [category, setCategory] = useState(\"Alimentação\");\r\n\r\n  const [tableRows, setTableRows] = useState([]);\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const priceRegex = /^([1-9]\\d*\\.\\d{1,2})|([0]\\.\\d{1,2}|([0-9]\\d*))$/;\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    if (validateFields()) {\r\n      setTableRows([\r\n        ...tableRows,\r\n        {\r\n          date,\r\n          description,\r\n          price,\r\n          multiplier,\r\n          category\r\n        }\r\n      ]);\r\n      setDate(null);\r\n      setDescription(\"\");\r\n      setPrice(\"0.00\");\r\n      setMultiplier(1);\r\n      setCategory(\"Alimentação\");\r\n    }\r\n    console.log(\"Errors on submit: \", commitError.errs);\r\n  };\r\n\r\n  const handleDelete = (_, rowIndex) => {\r\n    setTableRows(tableRows.filter((_, index) => index !== rowIndex));\r\n  };\r\n\r\n  const commitError = (function commitError(err) {\r\n    if (typeof commitError.errs === \"undefined\") {\r\n      commitError.errs = {};\r\n      commitError.setState = () => setErrors(commitError.errs); //[...errors, ...commitError.errs] acumulativo\r\n    }\r\n    if (err) commitError.errs = { ...commitError.errs, ...err };\r\n    return commitError;\r\n  })(false);\r\n\r\n  const updateStates = () => {\r\n    //ERRORS\r\n    commitError.setState();\r\n  };\r\n\r\n  // VALIDATION OF FRONT-END FIELDS\r\n  const validateFields = () => {\r\n    if (isEmpty(date)) commitError({ date: true });\r\n    if (isEmpty(description)) commitError({ description: true });\r\n    if (isEmpty(multiplier)) commitError({ multiplier: true });\r\n\r\n    if (!priceRegex.test(price)) commitError({ price: true });\r\n\r\n    updateStates();\r\n\r\n    return !Object.keys(commitError.errs).length;\r\n  };\r\n\r\n  var binaryData;\r\n  function load_binary_resource(url) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", url, true);\r\n    xhr.responseType = \"arraybuffer\";\r\n\r\n    // Process the response when the request is ready.\r\n    xhr.onload = function(e) {\r\n      if (this.status == 200) {\r\n        var type = xhr.getResponseHeader(\"Content-Type\");\r\n        var blob = new Blob([this.response], { type: type });\r\n\r\n        var reader = new FileReader();\r\n        reader.onloadend = function(event) {\r\n          var arrayBuffer = reader.result;\r\n\r\n          var workbook = new Excel.Workbook();\r\n\r\n          workbook.xlsx\r\n            .load(arrayBuffer)\r\n            .then(function(workbook) {\r\n              const worksheet = workbook.getWorksheet(\"Relatório de despesas\");\r\n\r\n              const extraRows = tableRows.length - 1;\r\n\r\n              worksheet.spliceRows(12, 0, ...new Array(extraRows));\r\n\r\n              //Header Cells\r\n              //Company Nif\r\n              worksheet.getRow(4).getCell(8).value = companyTaxNumber;\r\n              //Start Date\r\n              worksheet.getRow(4).getCell(12).value = startDate;\r\n              //End Date\r\n              worksheet.getRow(5).getCell(12).value = endDate;\r\n              //Employee NIF\r\n              worksheet.getRow(7).getCell(11).value = employeeTaxNumber;\r\n              //Employee name\r\n              worksheet.getRow(7).getCell(3).value = employeeName;\r\n              //Employee's position\r\n              worksheet.getRow(7).getCell(7).value = employeePosition;\r\n\r\n              //Fill grid styling\r\n              worksheet\r\n                .getRow(11)\r\n                .eachCell({ includeEmpty: true }, function(cell, colNumber) {\r\n                  [...Array(extraRows).keys()].forEach((_, index) => {\r\n                    worksheet.getRow(12 + index).getCell(colNumber).style =\r\n                      cell.style;\r\n                  });\r\n                });\r\n\r\n              //console.log(worksheet.getRow(11).getCell(7).style);\r\n\r\n              const categoryMap = {\r\n                Hotel: 0,\r\n                Transporte: 1,\r\n                Combustível: 2,\r\n                Alimentação: 3,\r\n                Telefone: 4,\r\n                Entretenimento: 5,\r\n                Diversos: 6\r\n              };\r\n\r\n              //Edit row values\r\n              [...Array(extraRows + 1).keys()].forEach((_, lineIndex) => {\r\n                const row = worksheet.getRow(11 + lineIndex);\r\n                //Date\r\n                row.getCell(2).value = new Date(tableRows[lineIndex].date);\r\n                //Price or multiplier???\r\n                //row.getCell(3).value = tableRows[lineIndex].price;\r\n                //Description\r\n                row.getCell(4).value = tableRows[lineIndex].description;\r\n                //Price on table\r\n                const cell = (row.getCell(\r\n                  5 + categoryMap[tableRows[lineIndex].category]\r\n                ).value = parseFloat(tableRows[lineIndex].price));\r\n\r\n                row.getCell(12).value = {\r\n                  formula: `SUM(E${11 + lineIndex}:K${11 + lineIndex})`,\r\n                  result: parseFloat(tableRows[lineIndex].price)\r\n                };\r\n              });\r\n\r\n              //Edit sum of category (column)\r\n              //Hotel\r\n              const row = worksheet.getRow(12 + extraRows);\r\n              row.getCell(5).value = {\r\n                formula: `SUM(E11:E${11 + extraRows})`\r\n              };\r\n              row.getCell(6).value = {\r\n                formula: `SUM(F11:F${11 + extraRows})`\r\n              };\r\n              row.getCell(7).value = {\r\n                formula: `SUM(G11:G${11 + extraRows})`\r\n              };\r\n              row.getCell(8).value = {\r\n                formula: `SUM(H11:H${11 + extraRows})`\r\n              };\r\n              row.getCell(9).value = {\r\n                formula: `SUM(I11:I${11 + extraRows})`\r\n              };\r\n              row.getCell(10).value = {\r\n                formula: `SUM(J11:J${11 + extraRows})`\r\n              };\r\n              row.getCell(11).value = {\r\n                formula: `SUM(K11:K${11 + extraRows})`\r\n              };\r\n\r\n              //Footer cells\r\n              //Subtotal\r\n              worksheet.getRow(13 + extraRows).getCell(12).value = {\r\n                formula: `SUM(L11:L${11 + extraRows})`\r\n              };\r\n              //Total\r\n              worksheet.getRow(15 + extraRows).getCell(12).value = {\r\n                formula: `(L${13 + extraRows}-L${14 + extraRows})`\r\n              };\r\n\r\n              workbook.xlsx.writeBuffer().then(function(data) {\r\n                var blob = new Blob([data], {\r\n                  type:\r\n                    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                });\r\n                saveAs(blob, \"fileName.xlsx\");\r\n              });\r\n            })\r\n            .catch(error => {\r\n              console.error(error);\r\n            });\r\n        };\r\n        reader.readAsArrayBuffer(blob);\r\n      }\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  function generateExcelFile() {\r\n    load_binary_resource(\r\n      \"https://raw.githubusercontent.com/GoardiaMC/ExcelAutomation/master/sheet.xlsx\"\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <br></br>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Fill Business and Worker Information\r\n      </Typography>\r\n      <br></br>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Descrição\"\r\n            value={companyName}\r\n            onChange={e => setCompanyName(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Business Taxpayer Number\"\r\n            value={companyTaxNumber}\r\n            onChange={e => setCompanyTaxNumber(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Worker's Name\"\r\n            value={employeeName}\r\n            onChange={e => setEmployeeName(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Worker's Taxpayer Number\"\r\n            value={employeeTaxNumber}\r\n            onChange={e => setEmployeeTaxNumber(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Worker's Job Position\"\r\n            value={employeePosition}\r\n            onChange={e => setEmplyeePosition(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Worker's Department\"\r\n            value={emplyeeDepartment}\r\n            onChange={e => setEmplyeeDepartment(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              disableToolbar\r\n              fullWidth\r\n              variant=\"inline\"\r\n              format=\"dd/MM/yyyy\"\r\n              label=\"Start Date\"\r\n              value={startDate}\r\n              onChange={e => {\r\n                if (!tableRows.length) setStartDate(e);\r\n              }}\r\n              className={commitError.errs.date ? classes.error : null}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              disableToolbar\r\n              fullWidth\r\n              variant=\"inline\"\r\n              format=\"dd/MM/yyyy\"\r\n              label=\"End Date\"\r\n              value={endDate}\r\n              onChange={e => {\r\n                if (!tableRows.length) setEndDate(e);\r\n              }}\r\n              className={commitError.errs.date ? classes.error : null}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n      </Grid>\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register Expense\r\n        </Typography>\r\n        <br></br>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                fullWidth\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                label=\"Date\"\r\n                value={date}\r\n                mask=\"\"\r\n                onChange={e => {\r\n                  if (startDate && startDate <= e && e <= endDate) setDate(e);\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Description\"\r\n              value={description || \"Teste \"}\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Cost\"\r\n              value={price}\r\n              onChange={e => setPrice(e.target.value)}\r\n              error={!priceRegex.test(price) && price != \"0.00\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Multiplier\"\r\n              value={multiplier}\r\n              type=\"number\"\r\n              onChange={e => {\r\n                if (/^[1-9]\\d*$/g.test(e.target.value))\r\n                  setMultiplier(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel style={{ fontSize: 12 }}>Category</InputLabel>\r\n            <Select\r\n              fullWidth\r\n              style={{ padding: \"5px 0 0 0\" }}\r\n              value={category}\r\n              onChange={e => setCategory(e.target.value)}\r\n            >\r\n              <MenuItem value={\"Hotel\"}>Hotel</MenuItem>\r\n              <MenuItem value={\"Transporte\"}>Transporte</MenuItem>\r\n              <MenuItem value={\"Combustível\"}>Combustível</MenuItem>\r\n              <MenuItem value={\"Alimentação\"}>Alimentação</MenuItem>\r\n              <MenuItem value={\"Telefone\"}>Telefone</MenuItem>\r\n              <MenuItem value={\"Entretenimento\"}>Entretenimento</MenuItem>\r\n              <MenuItem value={\"Diversos\"}>Diversos</MenuItem>\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={e => handleSubmit(e)}\r\n        >\r\n          Add Information\r\n        </Button>\r\n      </div>\r\n      {tableRows.length ? (\r\n        <Grid container style={{ padding: \"0 0 10px 0\" }} spacing={1}>\r\n          <Grid item xs={2}>\r\n            <TextField\r\n              className={classes.header}\r\n              fullWidth\r\n              variant=\"filled\"\r\n              disabled={true}\r\n              defaultValue=\"Data\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              className={classes.header}\r\n              fullWidth\r\n              variant=\"filled\"\r\n              disabled={true}\r\n              defaultValue=\"Descrição\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TextField\r\n              className={classes.header}\r\n              fullWidth\r\n              variant=\"filled\"\r\n              disabled={true}\r\n              defaultValue=\"Custo\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <TextField\r\n              className={classes.header}\r\n              fullWidth\r\n              variant=\"filled\"\r\n              disabled={true}\r\n              defaultValue=\"x\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ) : null}\r\n      {tableRows.map((row, index) => {\r\n        return (\r\n          <Grid container key={uuid()} spacing={1}>\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                className={classes.tableRow}\r\n                fullWidth\r\n                variant=\"filled\"\r\n                disabled={true}\r\n                defaultValue={getDMY(row.date)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                className={classes.tableRow}\r\n                fullWidth\r\n                variant=\"filled\"\r\n                disabled={true}\r\n                defaultValue={row.description}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                className={classes.tableRow}\r\n                fullWidth\r\n                variant=\"filled\"\r\n                disabled={true}\r\n                defaultValue={row.price}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <TextField\r\n                className={classes.tableRow}\r\n                fullWidth\r\n                variant=\"filled\"\r\n                disabled={true}\r\n                defaultValue={row.multiplier}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <Button\r\n                onClick={e => handleDelete(e, index)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.deleteRow}\r\n              >\r\n                <DeleteIcon></DeleteIcon>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      })}\r\n      {tableRows.length ? (\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={e => generateExcelFile()}\r\n        >\r\n          Generate Excel File\r\n        </Button>\r\n      ) : null}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport CreateSheet from \"./components/create-sheet\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Route path=\"/\" exact component={CreateSheet} />\n      </div>\n    </Router>\n  );\n}\n//<Route path=\"/login\" render={props => <LoginPage {...props} />} />\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}